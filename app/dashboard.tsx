"use client"

import type React from "react"
import { useState } from "react"
import { CardContent } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { AlertTriangle, Users, Building2, Sparkles } from "lucide-react"

interface DashboardProps {
  onBack: () => void
}

export default function Dashboard({ onBack }: DashboardProps) {
  const [isAuthenticated, setIsAuthenticated] = useState(false)
  const [password, setPassword] = useState("")
  const [error, setError] = useState("")

  // Dados da enquete de ATENDIMENTO (voc√™ pode atualizar manualmente aqui)
  const serviceData = [
    { option: "Excelente, at√© indicaria para uma pessoa", votes: 23, color: "bg-green-500" },
    { option: "√ìtimo, excelente trabalho", votes: 14, color: "bg-blue-500" },
    { option: "Bom, mas daria para melhorar", votes: 1, color: "bg-yellow-500" },
    { option: "Ruim, precisa de melhora", votes: 0, color: "bg-red-500" },
  ]

  // Dados da enquete de INFRAESTRUTURA (voc√™ pode atualizar manualmente aqui)
  const infrastructureData = [
    { option: "Muito bonita, n√£o precisa mudar nada!", votes: 26, color: "bg-green-500" },
    { option: "Boa, mas poderia ter alguns ajustes", votes: 12, color: "bg-blue-500" },
    { option: "Regular, precisa de melhorias em alguns pontos", votes: 0, color: "bg-yellow-500" },
    { option: "Ruim, precisa de uma reforma urgente", votes: 0, color: "bg-red-500" },
  ]

  // Dados da enquete de HIGIENE (voc√™ pode atualizar manualmente aqui)
  const hygieneData = [
    { option: "Sempre muito limpa, sem nada a reclamar!", votes: 31, color: "bg-green-500" },
    { option: "Limpeza boa, mas d√° pra melhorar em alguns pontos", votes: 5, color: "bg-blue-500" },
    { option: "√Äs vezes deixa a desejar, precisa mais aten√ß√£o", votes: 2, color: "bg-yellow-500" },
    { option: "Falta cuidado, limpeza √© um problema s√©rio aqui", votes: 0, color: "bg-red-500" },
  ]

  // Sugest√µes recebidas (voc√™ pode atualizar manualmente aqui)
  const suggestions = [
"Preciso voltar a treinar mais vezes",
"Espa√ßo mais amplo, mais ventila√ß√£o, mas e um lugar muito bom para treinos, irei indicar aos amigos",
"Mais equipamentos para panturrilha",
"Pra est√° tudo perfeitos",
"O espa√ßo √© curto, e eu sei disso, mas caso algum dia voc√™ queira comprar uma outra maquina, independente de qual for, aqui vai algumas sugest√µes: Remada High-row, Leg Press 180, Panturrila em p√©, Supino sentado(aquele anilhado, que √© pequeno, acredito q seria diferente este) e vejo bastante mulher pedindo m√°quinas de gl√∫teos lkkkkkkkk, mas quero n√£o üòé. Como falei √© sugest√£o, sabendo que o espa√ßo √© curto, de resto esta tudo certo, parab√©ns pelo investimento üëèüèªüëèüèª",
"Talvez mais uma barra e o ‚ÄúV‚Äù do puxador, pra deixar como ‚Äúreserva‚Äù, tem um pessoal que leva para as polias e n√£o trazem de volta.",
"Aumentar a quantidade de locais com pano e √°lcool gel para melhor higienizar os aparelhos, pois assim a pessoa que for fazer o exerc√≠cio ela mesmo pode higieniza-lo",
"Coloquei perfeito em 2 itens‚Ä¶ S√≥ coloquei que precisa de ajustes na infraestrutura, tipo os pisos e a pr√≥pria pintura, fazer alguns novos desenhos, aqueles ‚Äúcards‚Äù na parede, nao em papel, como ‚Äúcards‚Äù e alguns no banheiro tamb√©m, pedindo pra ‚Äúacertar a mira‚Äù que pelo jeito sempre erram‚Ä¶. talvez trazer as polias mais perto da porta para interromper o estacionamento de patinetes na porta, tirar aquele espa√ßo dali‚Ä¶ Ja que tem muitas maquinas, acredito que agora daria pra focar em m√°quinas pequenas‚Ä¶. Nunca √© demais",
"academia nota 10!!",
"S√≥ tenho que elogiar!! Continue assim.",
"N√£o teria como comprar algo para deixar os patinetes na cal√ßada?? unica coisa que atrapalha pra mim kkkkkk, nota 10 alison",
"Mais halteres, no sentido de ser 2 de cada‚Ä¶.",
"Aparelho de escada tipo esteira",
"A academia √© impec√°vel... d√™s dos professores at√© infraestrutura, por√©m daria a minha opini√£o de emborrachar o piso inteiro da academia e investir em mais m√°quinas de c√°rdioü§ùü§ù",
"Seria interessante que tivesse mobilidade e hit para os homens tamb√©m",
"Alisson pagar o lanche do buzeti e do catabriga.",
"Whey, creatina, Bomba... Tudo de gra√ßa",
"2 halteres de cada, tem dia que fica dificil um de cada somente",
"Mais um suporte de anilhas na parte de tras da academia, e talvez algumas barras montadas",
"Dif√≠cil achar algo para melhorar, visto que √© muito boa em todos os aspectos. E muito bom saber que o Alison se preocupa em sempre pesquisada satisfa√ß√£o dos alunos. Estou muito satisfeito. Parab√©ns.",
"Uma m√°quina de abdominal vai agregar ainda mais",
"Dose de Testozinha basica, so pra repor.",
"Colocar adesivos no suporte das anilhas para a identifica√ß√£o r√°pida.",
"Colocar alguns cards pela academia, querendo ou nao o papel de guardar peso √© muito simples, ai colocando alguns no banheiro tamb√©m!",

]

  const totalServiceVotes = serviceData.reduce((sum, item) => sum + item.votes, 0)
  const totalInfrastructureVotes = infrastructureData.reduce((sum, item) => sum + item.votes, 0)
  const totalHygieneVotes = hygieneData.reduce((sum, item) => sum + item.votes, 0)

  const handleLogin = (e: React.FormEvent) => {
    e.preventDefault()
    if (password === "adminpakitos") {
      setIsAuthenticated(true)
      setError("")
    } else {
      setError("Senha incorreta!")
    }
  }

  const renderChart = (data: any[], totalVotes: number, title: string, icon: React.ReactNode) => (
    <div className="space-y-4">
      <div className="text-center flex items-center justify-center space-x-2">
        {icon}
        <h4 className="text-lg font-bold text-gray-800">{title}</h4>
      </div>

      {data.map((item, index) => {
        const percentage = totalVotes > 0 ? (item.votes / totalVotes) * 100 : 0

        return (
          <div key={index} className="space-y-2">
            <div className="flex justify-between items-center">
              <span className="text-sm font-medium text-gray-700 flex-1 pr-2">{item.option}</span>
              <div className="flex items-center space-x-2 text-sm font-bold">
                <span className="text-gray-600">{item.votes} votos</span>
                <span className="text-red-600">{percentage.toFixed(1)}%</span>
              </div>
            </div>

            <div className="w-full bg-gray-200 rounded-full h-6 overflow-hidden">
              <div
                className={`h-full ${item.color} transition-all duration-500 ease-out flex items-center justify-end pr-2`}
                style={{ width: `${percentage}%` }}
              >
                {percentage > 15 && <span className="text-white text-xs font-bold">{percentage.toFixed(1)}%</span>}
              </div>
            </div>
          </div>
        )
      })}

      <div className="bg-gray-50 rounded-xl p-3 border border-gray-300">
        <div className="text-center">
          <p className="text-sm font-bold text-gray-700">TOTAL DE VOTOS</p>
          <p className="text-2xl font-bold text-red-600">{totalVotes}</p>
        </div>
      </div>
    </div>
  )

  if (!isAuthenticated) {
    return (
      <CardContent className="p-8">
        <div className="text-center space-y-6">
          <h3 className="text-2xl font-bold text-red-600">üîí Acesso Restrito</h3>
          <p className="text-gray-600">Digite a senha para acessar os resultados da enquete:</p>

          <form onSubmit={handleLogin} className="space-y-4">
            <div>
              <Label htmlFor="password" className="text-left block mb-2 font-semibold">
                Senha:
              </Label>
              <Input
                id="password"
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="border-2 border-red-600 focus:border-red-700 focus:ring-red-600 rounded-xl h-12"
                placeholder="Digite a senha"
              />
              {error && <p className="text-red-500 text-sm mt-2">{error}</p>}
            </div>

            <div className="space-y-3">
              <Button type="submit" className="w-full bg-red-600 text-white hover:bg-red-700 h-12 rounded-xl font-bold">
                Acessar Dashboard
              </Button>

              <Button
                type="button"
                onClick={onBack}
                className="w-full bg-gray-200 text-black hover:bg-gray-300 border-2 border-red-600 rounded-xl font-bold h-12"
              >
                Voltar
              </Button>
            </div>
          </form>
        </div>
      </CardContent>
    )
  }

  return (
    <CardContent className="p-8">
      <div className="space-y-6">
        {/* Aviso sobre atualiza√ß√£o dos dados */}
        <div className="bg-yellow-50 border-2 border-yellow-400 rounded-xl p-4 flex items-start space-x-3">
          <AlertTriangle className="text-yellow-600 mt-0.5 flex-shrink-0" size={20} />
          <div>
            <h4 className="font-bold text-yellow-800 text-sm">AVISO IMPORTANTE</h4>
            <p className="text-yellow-700 text-sm mt-1">
              Os resultados apresentados n√£o s√£o atualizados em tempo real. As informa√ß√µes s√£o processadas
              periodicamente e podem levar algum tempo para refletir as respostas mais recentes.
            </p>
          </div>
        </div>

        <div className="text-center">
          <h3 className="text-2xl font-bold text-red-600 mb-2">üìä Resultados da Enquete</h3>
        </div>

        {/* Gr√°fico de Atendimento */}
        <div className="bg-blue-50 rounded-xl p-4 border-2 border-blue-400">
          {renderChart(
            serviceData,
            totalServiceVotes,
            "AVALIA√á√ÉO DO ATENDIMENTO",
            <Users className="text-blue-600" size={20} />,
          )}
        </div>

        {/* Gr√°fico de Infraestrutura */}
        <div className="bg-green-50 rounded-xl p-4 border-2 border-green-400">
          {renderChart(
            infrastructureData,
            totalInfrastructureVotes,
            "AVALIA√á√ÉO DA INFRAESTRUTURA",
            <Building2 className="text-green-600" size={20} />,
          )}
        </div>

        {/* Gr√°fico de Higiene */}
        <div className="bg-cyan-50 rounded-xl p-4 border-2 border-cyan-400">
          {renderChart(
            hygieneData,
            totalHygieneVotes,
            "AVALIA√á√ÉO DA LIMPEZA E HIGIENE",
            <Sparkles className="text-cyan-600" size={20} />,
          )}
        </div>

        {/* Resumo Geral */}
        <div className="bg-red-50 rounded-xl p-4 border-2 border-red-400">
          <div className="text-center">
            <h4 className="text-lg font-bold text-red-800 mb-3">üìà RESUMO GERAL</h4>
            <div className="grid grid-cols-3 gap-3">
              <div className="bg-white rounded-lg p-3 border border-red-200">
                <p className="text-xs font-medium text-gray-600">Atendimento</p>
                <p className="text-xl font-bold text-red-600">{totalServiceVotes}</p>
                <p className="text-xs text-gray-500">votos</p>
              </div>
              <div className="bg-white rounded-lg p-3 border border-red-200">
                <p className="text-xs font-medium text-gray-600">Infraestrutura</p>
                <p className="text-xl font-bold text-red-600">{totalInfrastructureVotes}</p>
                <p className="text-xs text-gray-500">votos</p>
              </div>
              <div className="bg-white rounded-lg p-3 border border-red-200">
                <p className="text-xs font-medium text-gray-600">Higiene</p>
                <p className="text-xl font-bold text-red-600">{totalHygieneVotes}</p>
                <p className="text-xs text-gray-500">votos</p>
              </div>
            </div>
            <div className="mt-3 bg-white rounded-lg p-3 border border-red-200">
              <p className="text-sm font-medium text-gray-600">Total Geral</p>
              <p className="text-3xl font-bold text-red-600">
                {totalServiceVotes + totalInfrastructureVotes + totalHygieneVotes}
              </p>
              <p className="text-xs text-gray-500">participa√ß√µes</p>
            </div>
          </div>
        </div>

        {/* Se√ß√£o de Sugest√µes */}
        <div className="bg-purple-50 rounded-xl p-4 border-2 border-purple-400">
          <h4 className="text-lg font-bold text-purple-800 mb-4 text-center">üí° SUGEST√ïES RECEBIDAS</h4>
          <div className="space-y-3 max-h-60 overflow-y-auto">
            {suggestions.length > 0 ? (
              suggestions.map((suggestion, index) => (
                <div key={index} className="bg-white rounded-lg p-3 border border-purple-200 shadow-sm">
                  <p className="text-gray-700 text-sm leading-relaxed">"{suggestion}"</p>
                </div>
              ))
            ) : (
              <p className="text-purple-600 text-center italic">Nenhuma sugest√£o recebida ainda.</p>
            )}
          </div>
          {suggestions.length > 0 && (
            <div className="mt-3 text-center">
              <p className="text-purple-600 text-sm font-medium">Total de sugest√µes: {suggestions.length}</p>
            </div>
          )}
        </div>

        <Button
          onClick={onBack}
          className="w-full bg-gray-200 text-black hover:bg-gray-300 border-2 border-red-600 rounded-xl font-bold h-12"
        >
          Voltar ao In√≠cio
        </Button>
      </div>
    </CardContent>
  )
}
